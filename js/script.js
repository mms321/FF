// ...existing code...
document.addEventListener('DOMContentLoaded', () => {

  const arrayOfLoveWishes = [
    "–ù–µ—Ö–∞–π –∑–µ–ª–µ–Ω—å –∂–∏—Ç—Ç—è –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Å–ø–æ–∫—ñ–π —ñ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è!",
    "–ë–∞–∂–∞—é —Ä–æ—Å—Ç—É, –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –π –≥–∞—Ä–º–æ–Ω—ñ—ó ‚Äî —É –∑–µ–ª–µ–Ω–∏—Ö —Ç–æ–Ω–∞—Ö!",
    "–ù–µ—Ö–∞–π –∫–æ–∂–µ–Ω –¥–µ–Ω—å –±—É–¥–µ —è–∫ —Å–≤—ñ–∂–∞ –≤–µ—Å–Ω—è–Ω–∞ —Ç—Ä–∞–≤–∞ ‚Äî –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π –µ–Ω–µ—Ä–≥—ñ—î—é.",
    "–•–∞–π –∂–∏—Ç—Ç—è —Ü–≤—ñ—Ç–µ, —è–∫ —Å–∞–¥ –ø—ñ—Å–ª—è –¥–æ—â—É ‚Äî –±—ñ–ª—å—à–µ –∑–µ–ª–µ–Ω–∏—Ö –º–∏—Ç—Ç—î–≤–æ—Å—Ç–µ–π!",
    "–ë–∞–∂–∞—é –º–∏—Ä—É, –∑–¥–æ—Ä–æ–≤'—è —Ç–∞ –≥–∞—Ä–º–æ–Ω—ñ—ó, —â–æ –¥–∞—î –∑–µ–ª–µ–Ω–∏–π –∫–æ–ª—ñ—Ä.",
    "–ù–µ—Ö–∞–π —É –≤–∞—à–æ–º—É –¥–æ–º—ñ –±—É–¥–µ –±—ñ–ª—å—à–µ —Ä–æ—Å–ª–∏–Ω, —Ç–µ–ø–ª–∞ —ñ –∑–µ–ª–µ–Ω—ñ!",
    "–ë–∞–∂–∞—é –Ω–æ–≤–∏—Ö –ø–æ—á–∏–Ω–∞–Ω—å —ñ —Å—Ç–∞–±—ñ–ª—å–Ω–æ–≥–æ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è, —è–∫ —É –¥–µ—Ä–µ–≤–∞.",
    "–ù–µ—Ö–∞–π –≤–∞—à—ñ –º—Ä—ñ—ó —Ä–æ—Å—Ç—É—Ç—å —ñ –º—ñ—Ü–Ω—ñ—à–∞—é—Ç—å, —è–∫ –∫–æ—Ä—ñ–Ω–Ω—è –≤ –∑–µ–º–ª—ñ.",
    "–ë–∞–∂–∞—é –∑–∞—Ç–∏—à–∫—É, –±–∞–ª–∞–Ω—Å—É —ñ —Å–≤—ñ–∂–æ–≥–æ –ø–æ–≥–ª—è–¥—É –Ω–∞ –∂–∏—Ç—Ç—è.",
    "–•–∞–π –∫–æ–ª—ñ—Ä –≤–∞—à–æ—ó –º—Ä—ñ—ó –±—É–¥–µ –¥–∂–µ—Ä–µ–ª–æ–º —Ä–∞–¥–æ—Å—Ç—ñ —Ç–∞ —Å–ø–æ–∫–æ—é!",
    "–ù–µ—Ö–∞–π –∑–µ–ª–µ–Ω—å –Ω–∞–≤–∫–æ–ª–æ –Ω–∞–¥–∏—Ö–∞—î –Ω–∞ –¥–æ–±—Ä—ñ –≤—á–∏–Ω–∫–∏ –π —Ç–≤–æ—Ä—á—ñ—Å—Ç—å.",
    "–ë–∞–∂–∞—é –∑–Ω–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –±–∞–ª–∞–Ω—Å —ñ —Å–∏–ª—É, —è–∫ —É –º—ñ—Ü–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞."
  ];

  const btn = document.getElementById('btn_love_wishes');
  const loveEl = document.getElementById('love-wishes');
  const rangeEl = document.getElementById('snowRange');
  const rangeValueEl = document.getElementById('range-value');

  if (btn && loveEl) {
    btn.addEventListener('click', () => {
      const index = Math.floor(Math.random() * arrayOfLoveWishes.length);
      loveEl.innerText = arrayOfLoveWishes[index];
    });
  }

  // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó –ª–∏—Å—Ç–æ—á–∫—ñ–≤
  let intervalId = null;
  let createInterval = 400;
  let leafSize = 28;
  let leafSpeed = 2.2;

  function updateRangeLabel(t) {
    if (!rangeValueEl) return;
    if (t < 0.33) rangeValueEl.textContent = '–ù–∏–∑—å–∫–∞';
    else if (t < 0.66) rangeValueEl.textContent = '–°–µ—Ä–µ–¥–Ω—è';
    else rangeValueEl.textContent = '–í–∏—Å–æ–∫–∞';
  }

  function updateSettings() {
    if (!rangeEl) return;
    const min = 100, max = 1200;
    const minSize = 18, maxSize = 48;
    const minSpeed = 0.9, maxSpeed = 4.0;
    const value = Number(rangeEl.value);
    const t = Math.max(0, Math.min(1, (value - min) / (max - min))); // 0..1
    // –Ü–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ñ—Å—Ç—å: –ø–æ–≤–∑—É–Ω–æ–∫ –≤–ø—Ä–∞–≤–æ ‚Üí –±—ñ–ª—å—à–µ –ª–∏—Å—Ç—è
    createInterval = Math.round(lerp(max, min, t)); // –±—ñ–ª—å—à–µ t ‚Üí –º–µ–Ω—à–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª
    leafSize = Math.round(lerp(maxSize, minSize, t)); // –±—ñ–ª—å—à–µ t ‚Üí –¥—Ä—ñ–±–Ω—ñ—à—ñ –ª–∏—Å—Ç–∫–∏
    leafSpeed = lerp(minSpeed, maxSpeed, t); // –±—ñ–ª—å—à–µ t ‚Üí —à–≤–∏–¥—à–µ –ø–∞–¥—ñ–Ω–Ω—è

    updateRangeLabel(t);

    if (intervalId) clearInterval(intervalId);
    intervalId = setInterval(createLeaf, Math.max(20, createInterval));
  }

  function lerp(a, b, t) { return a + (b - a) * t; }

  function createLeaf() {
    const leaf = document.createElement('div');
    leaf.className = 'leaf';
    leaf.innerText = 'üçÉ';
    const startX = Math.random() * window.innerWidth;
    const size = Math.random() * (leafSize * 0.5) + leafSize * 0.5;
    leaf.style.left = startX + 'px';
    leaf.style.top = '-48px';
    leaf.style.fontSize = size + 'px';
    leaf.style.opacity = (Math.random() * 0.6 + 0.35).toString();
    document.body.appendChild(leaf);

    // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ä—É—Ö—É
    const speed = Math.random() * leafSpeed + leafSpeed * 0.5;
    let drift = (Math.random() - 0.5) * 2.8;
    let rot = (Math.random() - 0.5) * 0.06;
    let top = -48;
    let left = startX;

    function fall() {
      top += speed;
      left += drift;
      rot += (Math.random() - 0.5) * 0.02;
      leaf.style.top = top + 'px';
      leaf.style.left = left + 'px';
      leaf.style.transform = `rotate(${rot}turn)`;
      if (top < window.innerHeight + 60) {
        requestAnimationFrame(fall);
      } else {
        leaf.remove();
      }
    }
    requestAnimationFrame(fall);
  }

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
  if (rangeEl) {
    rangeEl.addEventListener('input', updateSettings);
  }
  updateSettings();

  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ
  window.addEventListener('beforeunload', () => {
    if (intervalId) clearInterval(intervalId);
  });

});
// ...existing code...